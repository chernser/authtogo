// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grcpdatastore.proto

package authtogo_datastore

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//*
//Defines request for GetRow method.
type GetRowRequest struct {
	//*
	//Id of the row. Typically is token id.
	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	//*
	//List of fields to be returned in response.
	Fields               []string `protobuf:"bytes,2,rep,name=Fields,proto3" json:"Fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRowRequest) Reset()         { *m = GetRowRequest{} }
func (m *GetRowRequest) String() string { return proto.CompactTextString(m) }
func (*GetRowRequest) ProtoMessage()    {}
func (*GetRowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0219bbb41e48abb, []int{0}
}

func (m *GetRowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRowRequest.Unmarshal(m, b)
}
func (m *GetRowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRowRequest.Marshal(b, m, deterministic)
}
func (m *GetRowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRowRequest.Merge(m, src)
}
func (m *GetRowRequest) XXX_Size() int {
	return xxx_messageInfo_GetRowRequest.Size(m)
}
func (m *GetRowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRowRequest proto.InternalMessageInfo

func (m *GetRowRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetRowRequest) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

//*
//Defines response for GetRow method
type GetRowResponse struct {
	//*
	//Flag indicates if error happened while invokation.
	//If this field = true, then ErrorMsg should contain some message.
	IsError bool `protobuf:"varint,1,opt,name=IsError,proto3" json:"IsError,omitempty"`
	//*
	//Error message which will be recorded in the log of the server.
	//Message will not be shown to user.
	ErrorMsg string `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	//*
	//Mapped value of row fields.
	//If empty - means no data found.
	Row                  map[string]string `protobuf:"bytes,3,rep,name=Row,proto3" json:"Row,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetRowResponse) Reset()         { *m = GetRowResponse{} }
func (m *GetRowResponse) String() string { return proto.CompactTextString(m) }
func (*GetRowResponse) ProtoMessage()    {}
func (*GetRowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0219bbb41e48abb, []int{1}
}

func (m *GetRowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRowResponse.Unmarshal(m, b)
}
func (m *GetRowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRowResponse.Marshal(b, m, deterministic)
}
func (m *GetRowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRowResponse.Merge(m, src)
}
func (m *GetRowResponse) XXX_Size() int {
	return xxx_messageInfo_GetRowResponse.Size(m)
}
func (m *GetRowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRowResponse proto.InternalMessageInfo

func (m *GetRowResponse) GetIsError() bool {
	if m != nil {
		return m.IsError
	}
	return false
}

func (m *GetRowResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *GetRowResponse) GetRow() map[string]string {
	if m != nil {
		return m.Row
	}
	return nil
}

//*
//Defines request for InsertRow method
type InsertRowRequest struct {
	//*
	//Id of the row. Typically is token id.
	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	//*
	//Mapped value of row fields.
	//Empty map should trigger an error. It is not allowed to put
	//empty row into store.
	Row                  map[string]string `protobuf:"bytes,2,rep,name=Row,proto3" json:"Row,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *InsertRowRequest) Reset()         { *m = InsertRowRequest{} }
func (m *InsertRowRequest) String() string { return proto.CompactTextString(m) }
func (*InsertRowRequest) ProtoMessage()    {}
func (*InsertRowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0219bbb41e48abb, []int{2}
}

func (m *InsertRowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertRowRequest.Unmarshal(m, b)
}
func (m *InsertRowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertRowRequest.Marshal(b, m, deterministic)
}
func (m *InsertRowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertRowRequest.Merge(m, src)
}
func (m *InsertRowRequest) XXX_Size() int {
	return xxx_messageInfo_InsertRowRequest.Size(m)
}
func (m *InsertRowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertRowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertRowRequest proto.InternalMessageInfo

func (m *InsertRowRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InsertRowRequest) GetRow() map[string]string {
	if m != nil {
		return m.Row
	}
	return nil
}

//*
//Defines response of InsertRow method
type InsertRowResponse struct {
	//*
	//Flag indicates if error has occured while invokation.
	IsError bool `protobuf:"varint,1,opt,name=IsError,proto3" json:"IsError,omitempty"`
	//*
	//Error message if any.
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsertRowResponse) Reset()         { *m = InsertRowResponse{} }
func (m *InsertRowResponse) String() string { return proto.CompactTextString(m) }
func (*InsertRowResponse) ProtoMessage()    {}
func (*InsertRowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0219bbb41e48abb, []int{3}
}

func (m *InsertRowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertRowResponse.Unmarshal(m, b)
}
func (m *InsertRowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertRowResponse.Marshal(b, m, deterministic)
}
func (m *InsertRowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertRowResponse.Merge(m, src)
}
func (m *InsertRowResponse) XXX_Size() int {
	return xxx_messageInfo_InsertRowResponse.Size(m)
}
func (m *InsertRowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertRowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InsertRowResponse proto.InternalMessageInfo

func (m *InsertRowResponse) GetIsError() bool {
	if m != nil {
		return m.IsError
	}
	return false
}

func (m *InsertRowResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

//*
//Defines request for PutRow method
type PutRowRequest struct {
	//*
	//Id of the row. Typically is token id.
	Id string `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	//*
	//Mapped value of row fields.
	//Empty map should trigger an error. It is not allowed to put
	//empty row into store.
	Row                  map[string]string `protobuf:"bytes,2,rep,name=Row,proto3" json:"Row,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PutRowRequest) Reset()         { *m = PutRowRequest{} }
func (m *PutRowRequest) String() string { return proto.CompactTextString(m) }
func (*PutRowRequest) ProtoMessage()    {}
func (*PutRowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0219bbb41e48abb, []int{4}
}

func (m *PutRowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRowRequest.Unmarshal(m, b)
}
func (m *PutRowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRowRequest.Marshal(b, m, deterministic)
}
func (m *PutRowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRowRequest.Merge(m, src)
}
func (m *PutRowRequest) XXX_Size() int {
	return xxx_messageInfo_PutRowRequest.Size(m)
}
func (m *PutRowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRowRequest proto.InternalMessageInfo

func (m *PutRowRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PutRowRequest) GetRow() map[string]string {
	if m != nil {
		return m.Row
	}
	return nil
}

//*
//Defines response of PutRow method
type PutRowResponse struct {
	//*
	//Flag indicates if error has occured while invokation.
	IsError bool `protobuf:"varint,1,opt,name=IsError,proto3" json:"IsError,omitempty"`
	//*
	//Error message if any.
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutRowResponse) Reset()         { *m = PutRowResponse{} }
func (m *PutRowResponse) String() string { return proto.CompactTextString(m) }
func (*PutRowResponse) ProtoMessage()    {}
func (*PutRowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0219bbb41e48abb, []int{5}
}

func (m *PutRowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRowResponse.Unmarshal(m, b)
}
func (m *PutRowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRowResponse.Marshal(b, m, deterministic)
}
func (m *PutRowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRowResponse.Merge(m, src)
}
func (m *PutRowResponse) XXX_Size() int {
	return xxx_messageInfo_PutRowResponse.Size(m)
}
func (m *PutRowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutRowResponse proto.InternalMessageInfo

func (m *PutRowResponse) GetIsError() bool {
	if m != nil {
		return m.IsError
	}
	return false
}

func (m *PutRowResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

//*
//Defines request of DeleteRow method.
type DeleteRowRequest struct {
	//*
	//Id of the row. Typically is token id.
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRowRequest) Reset()         { *m = DeleteRowRequest{} }
func (m *DeleteRowRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRowRequest) ProtoMessage()    {}
func (*DeleteRowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0219bbb41e48abb, []int{6}
}

func (m *DeleteRowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRowRequest.Unmarshal(m, b)
}
func (m *DeleteRowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRowRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRowRequest.Merge(m, src)
}
func (m *DeleteRowRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRowRequest.Size(m)
}
func (m *DeleteRowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRowRequest proto.InternalMessageInfo

func (m *DeleteRowRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

//*
//Defines response of DeleteRow method
type DeleteRowResponse struct {
	//*
	//Flag indicates if error has occured while invokation.
	IsError bool `protobuf:"varint,1,opt,name=IsError,proto3" json:"IsError,omitempty"`
	//*
	//Error message if any.
	ErrorMsg             string   `protobuf:"bytes,2,opt,name=ErrorMsg,proto3" json:"ErrorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRowResponse) Reset()         { *m = DeleteRowResponse{} }
func (m *DeleteRowResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteRowResponse) ProtoMessage()    {}
func (*DeleteRowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e0219bbb41e48abb, []int{7}
}

func (m *DeleteRowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRowResponse.Unmarshal(m, b)
}
func (m *DeleteRowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRowResponse.Marshal(b, m, deterministic)
}
func (m *DeleteRowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRowResponse.Merge(m, src)
}
func (m *DeleteRowResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteRowResponse.Size(m)
}
func (m *DeleteRowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRowResponse proto.InternalMessageInfo

func (m *DeleteRowResponse) GetIsError() bool {
	if m != nil {
		return m.IsError
	}
	return false
}

func (m *DeleteRowResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRowRequest)(nil), "authtogo.datastore.GetRowRequest")
	proto.RegisterType((*GetRowResponse)(nil), "authtogo.datastore.GetRowResponse")
	proto.RegisterMapType((map[string]string)(nil), "authtogo.datastore.GetRowResponse.RowEntry")
	proto.RegisterType((*InsertRowRequest)(nil), "authtogo.datastore.InsertRowRequest")
	proto.RegisterMapType((map[string]string)(nil), "authtogo.datastore.InsertRowRequest.RowEntry")
	proto.RegisterType((*InsertRowResponse)(nil), "authtogo.datastore.InsertRowResponse")
	proto.RegisterType((*PutRowRequest)(nil), "authtogo.datastore.PutRowRequest")
	proto.RegisterMapType((map[string]string)(nil), "authtogo.datastore.PutRowRequest.RowEntry")
	proto.RegisterType((*PutRowResponse)(nil), "authtogo.datastore.PutRowResponse")
	proto.RegisterType((*DeleteRowRequest)(nil), "authtogo.datastore.DeleteRowRequest")
	proto.RegisterType((*DeleteRowResponse)(nil), "authtogo.datastore.DeleteRowResponse")
}

func init() { proto.RegisterFile("grcpdatastore.proto", fileDescriptor_e0219bbb41e48abb) }

var fileDescriptor_e0219bbb41e48abb = []byte{
	// 387 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0xc7, 0xc9, 0x06, 0x63, 0x33, 0xd2, 0xd2, 0xae, 0x22, 0x21, 0xa7, 0x1a, 0x14, 0x8a, 0x62,
	0x0e, 0x15, 0x54, 0x44, 0xf1, 0xd2, 0x56, 0x72, 0x90, 0xca, 0x0a, 0xd2, 0xeb, 0x6a, 0x96, 0x5a,
	0x0c, 0xdd, 0xba, 0xbb, 0xb1, 0xf4, 0x41, 0x3c, 0xf9, 0x2c, 0x3e, 0x90, 0x6f, 0x21, 0xf9, 0xa4,
	0x1f, 0xb1, 0x15, 0xda, 0xdb, 0x4e, 0xb2, 0x33, 0xf3, 0xfb, 0xcf, 0xfc, 0x59, 0xd8, 0xed, 0x8b,
	0x97, 0x91, 0x4f, 0x15, 0x95, 0x8a, 0x0b, 0xe6, 0x8e, 0x04, 0x57, 0x1c, 0x63, 0x1a, 0xaa, 0x57,
	0xc5, 0xfb, 0xdc, 0xcd, 0xff, 0x38, 0x17, 0x50, 0xbe, 0x63, 0x8a, 0xf0, 0x31, 0x61, 0xef, 0x21,
	0x93, 0x0a, 0x57, 0x00, 0x79, 0xbe, 0xa5, 0xd5, 0xb5, 0x86, 0x49, 0x90, 0xe7, 0xe3, 0x7d, 0x30,
	0x3a, 0x03, 0x16, 0xf8, 0xd2, 0x42, 0x75, 0xbd, 0x61, 0x92, 0x34, 0x72, 0xbe, 0x35, 0xa8, 0x64,
	0x99, 0x72, 0xc4, 0x87, 0x92, 0x61, 0x0b, 0xb6, 0x3d, 0xd9, 0x16, 0x82, 0x8b, 0x38, 0xbf, 0x44,
	0xb2, 0x10, 0xdb, 0x50, 0x8a, 0x0f, 0xf7, 0xb2, 0x6f, 0xa1, 0xb8, 0x74, 0x1e, 0xe3, 0x1b, 0xd0,
	0x09, 0x1f, 0x5b, 0x7a, 0x5d, 0x6f, 0xec, 0x34, 0x4f, 0xdc, 0x45, 0x46, 0x77, 0xb6, 0x8d, 0x4b,
	0xf8, 0xb8, 0x3d, 0x54, 0x62, 0x42, 0xa2, 0x3c, 0xfb, 0x1c, 0x4a, 0xd9, 0x07, 0x5c, 0x05, 0xfd,
	0x8d, 0x4d, 0x52, 0xf8, 0xe8, 0x88, 0xf7, 0x60, 0xeb, 0x83, 0x06, 0x21, 0x4b, 0xbb, 0x26, 0xc1,
	0x15, 0xba, 0xd4, 0x9c, 0x2f, 0x0d, 0xaa, 0xde, 0x50, 0x32, 0xb1, 0x4c, 0xfc, 0x6d, 0xc2, 0x86,
	0x62, 0xb6, 0xd3, 0x22, 0xb6, 0xf9, 0x12, 0x1b, 0xa2, 0xf3, 0xa0, 0x36, 0x55, 0x79, 0x9d, 0xf9,
	0x3a, 0x9f, 0x1a, 0x94, 0x1f, 0xc2, 0x65, 0x2a, 0xaf, 0xa7, 0x55, 0x1e, 0x17, 0xa9, 0x9c, 0xc9,
	0xdf, 0x90, 0xc4, 0x0e, 0x54, 0xb2, 0xb2, 0x6b, 0xe9, 0x73, 0xa0, 0xda, 0x62, 0x01, 0x53, 0xec,
	0x6f, 0x85, 0xd1, 0x38, 0xa7, 0xee, 0xac, 0xd3, 0xae, 0xf9, 0x83, 0xa0, 0xf6, 0xc4, 0x03, 0xaa,
	0x06, 0x01, 0x6b, 0x51, 0x45, 0x1f, 0xa3, 0x01, 0xe1, 0x2e, 0x18, 0x89, 0x4b, 0xf1, 0xc1, 0x32,
	0x07, 0xc7, 0x74, 0xb6, 0xb3, 0xda, 0xe4, 0xb8, 0x07, 0x66, 0x6e, 0x00, 0x7c, 0xf8, 0x1f, 0xe7,
	0xd9, 0x47, 0x2b, 0x6e, 0xa5, 0x95, 0xbb, 0x60, 0x24, 0x73, 0x2f, 0x46, 0x9d, 0x59, 0x75, 0x31,
	0xea, 0xdc, 0xda, 0x7a, 0x60, 0xe6, 0xc3, 0x2d, 0x46, 0x9d, 0xdf, 0x4f, 0x31, 0xea, 0xc2, 0x86,
	0x9e, 0x8d, 0xf8, 0xdd, 0x3a, 0xfb, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x32, 0x89, 0x57, 0xff, 0xce,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VolatileDataStoreClient is the client API for VolatileDataStore service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VolatileDataStoreClient interface {
	//*
	//GetRow returns row by id or empty record.
	//This method mainly used to get information about the token.
	GetRow(ctx context.Context, in *GetRowRequest, opts ...grpc.CallOption) (*GetRowResponse, error)
	//*
	//Inserts row into a datastore.
	InsertRow(ctx context.Context, in *InsertRowRequest, opts ...grpc.CallOption) (*InsertRowResponse, error)
	//*
	//PutRow updates the record in the datastore.
	PutRow(ctx context.Context, in *PutRowRequest, opts ...grpc.CallOption) (*PutRowResponse, error)
	//*
	//DeleteRow erases the record.
	DeleteRow(ctx context.Context, in *DeleteRowRequest, opts ...grpc.CallOption) (*DeleteRowResponse, error)
}

type volatileDataStoreClient struct {
	cc *grpc.ClientConn
}

func NewVolatileDataStoreClient(cc *grpc.ClientConn) VolatileDataStoreClient {
	return &volatileDataStoreClient{cc}
}

func (c *volatileDataStoreClient) GetRow(ctx context.Context, in *GetRowRequest, opts ...grpc.CallOption) (*GetRowResponse, error) {
	out := new(GetRowResponse)
	err := c.cc.Invoke(ctx, "/authtogo.datastore.VolatileDataStore/GetRow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volatileDataStoreClient) InsertRow(ctx context.Context, in *InsertRowRequest, opts ...grpc.CallOption) (*InsertRowResponse, error) {
	out := new(InsertRowResponse)
	err := c.cc.Invoke(ctx, "/authtogo.datastore.VolatileDataStore/InsertRow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volatileDataStoreClient) PutRow(ctx context.Context, in *PutRowRequest, opts ...grpc.CallOption) (*PutRowResponse, error) {
	out := new(PutRowResponse)
	err := c.cc.Invoke(ctx, "/authtogo.datastore.VolatileDataStore/PutRow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *volatileDataStoreClient) DeleteRow(ctx context.Context, in *DeleteRowRequest, opts ...grpc.CallOption) (*DeleteRowResponse, error) {
	out := new(DeleteRowResponse)
	err := c.cc.Invoke(ctx, "/authtogo.datastore.VolatileDataStore/DeleteRow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VolatileDataStoreServer is the server API for VolatileDataStore service.
type VolatileDataStoreServer interface {
	//*
	//GetRow returns row by id or empty record.
	//This method mainly used to get information about the token.
	GetRow(context.Context, *GetRowRequest) (*GetRowResponse, error)
	//*
	//Inserts row into a datastore.
	InsertRow(context.Context, *InsertRowRequest) (*InsertRowResponse, error)
	//*
	//PutRow updates the record in the datastore.
	PutRow(context.Context, *PutRowRequest) (*PutRowResponse, error)
	//*
	//DeleteRow erases the record.
	DeleteRow(context.Context, *DeleteRowRequest) (*DeleteRowResponse, error)
}

func RegisterVolatileDataStoreServer(s *grpc.Server, srv VolatileDataStoreServer) {
	s.RegisterService(&_VolatileDataStore_serviceDesc, srv)
}

func _VolatileDataStore_GetRow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolatileDataStoreServer).GetRow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authtogo.datastore.VolatileDataStore/GetRow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolatileDataStoreServer).GetRow(ctx, req.(*GetRowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolatileDataStore_InsertRow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertRowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolatileDataStoreServer).InsertRow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authtogo.datastore.VolatileDataStore/InsertRow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolatileDataStoreServer).InsertRow(ctx, req.(*InsertRowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolatileDataStore_PutRow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolatileDataStoreServer).PutRow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authtogo.datastore.VolatileDataStore/PutRow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolatileDataStoreServer).PutRow(ctx, req.(*PutRowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VolatileDataStore_DeleteRow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VolatileDataStoreServer).DeleteRow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authtogo.datastore.VolatileDataStore/DeleteRow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VolatileDataStoreServer).DeleteRow(ctx, req.(*DeleteRowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VolatileDataStore_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authtogo.datastore.VolatileDataStore",
	HandlerType: (*VolatileDataStoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRow",
			Handler:    _VolatileDataStore_GetRow_Handler,
		},
		{
			MethodName: "InsertRow",
			Handler:    _VolatileDataStore_InsertRow_Handler,
		},
		{
			MethodName: "PutRow",
			Handler:    _VolatileDataStore_PutRow_Handler,
		},
		{
			MethodName: "DeleteRow",
			Handler:    _VolatileDataStore_DeleteRow_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grcpdatastore.proto",
}
